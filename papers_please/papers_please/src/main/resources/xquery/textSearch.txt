declare namespace sp="https://github.com/ivanmihajlov/papers_please";
let $collection := collection("/db/sample/papers")
let $processes := collection("/db/sample/publishing_process")

return
	<search>
		{
			for $sp in $collection
			 for $pp in $processes
			  where $pp/sp:publishing-process/sp:paper-version[last()]/sp:scientific-paper-id/text() = $sp/sp:scientific_paper/@id and
			 ( ($loggedAuthor = "" and $sp/sp:scientific_paper/@status = "ACCEPTED") or 
			  ($loggedAuthor != "" and $loggedAuthor = $pp/sp:publishing-process/sp:author-id/text())) and 
			   $sp//*[contains(text(), $searchText)]
				return 
				 <paper>
					<id>{ data($sp/sp:scientific_paper/@id) }</id>
					<paper_status> { data($sp/sp:scientific_paper/@status) } </paper_status>
					<process_id>{ data($pp/sp:publishing-process/@id) }</process_id>
					<title>{ data($sp/sp:scientific_paper/sp:head/sp:title[1]) }</title>
					{
						for $author in $sp//sp:author
							return <author> { concat(data($author/sp:first_name), " ", data($author/sp:last_name)) } </author>
					}
					<received_date> { data($sp/sp:scientific_paper/sp:head/sp:received_date) } </received_date>
					<accepted_date> { data($sp/sp:scientific_paper/sp:head/sp:accepted_date) } </accepted_date>
					
					{
						for $keyword in $sp//sp:keyword
							return <keyword> { $keyword/text() } </keyword>
					}
				 </paper>
		}
	</search>
	